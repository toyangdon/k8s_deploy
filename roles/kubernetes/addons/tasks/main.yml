- name: 创建目录
  file: name={{ base_dir }}/manifests state=directory

- name: 创建calico yaml
  template: src=calico.yaml dest={{ base_dir }}/manifests/calico.yaml
  when: CLUSTER_NETWORK == "calico"
  
- name: 部署calico
  shell: "{{bin_dir}}/kubectl apply -f {{ base_dir }}/manifests/calico.yaml"
  when: CLUSTER_NETWORK == "calico"
  
- name: 创建flannel yaml文件
  template: src=kube-flannel.yaml dest={{ base_dir }}/manifests/kube-flannel.yaml
  when: CLUSTER_NETWORK == "flannel"
  
- name: 部署flannel
  shell: "{{bin_dir}}/kubectl apply -f {{ base_dir }}/manifests/kube-flannel.yaml"
  when: CLUSTER_NETWORK == "flannel"

- name: 创建 kube-proxy yaml文件
  template: src=kube-proxy.yaml dest={{ base_dir }}/manifests/kube-proxy.yaml
  
- name: 部署 kube-proxy
  shell: "{{bin_dir}}/kubectl apply -f {{ base_dir }}/manifests/kube-proxy.yaml"
  
- name: 创建 coredns yaml文件
  template: src=coredns.yaml dest={{ base_dir }}/manifests/coredns.yaml
  
- name: 部署 coredns
  shell: "{{bin_dir}}/kubectl apply -f {{ base_dir }}/manifests/coredns.yaml"
  
- name: 设置kubectl 拥有访问kubelet api 的权限
  shell: "{{bin_dir}}/kubectl create clusterrolebinding apiserver-kubelet-admin --user=kubernetes --clusterrole=system:kubelet-api-admin"  
  ignore_errors: true
  
- name: 创建 dns-horizontal-autoscaler.yaml文件
  template: src=dns-horizontal-autoscaler.yaml dest={{ base_dir }}/manifests/dns-horizontal-autoscaler.yaml
  when: k8s_cluster_proportional_autoscaler_image is defined
  
- name: 部署 dns-horizontal-autoscaler
  shell: "{{bin_dir}}/kubectl apply -f {{ base_dir }}/manifests/dns-horizontal-autoscaler.yaml"
  when: k8s_cluster_proportional_autoscaler_image is defined
  
- name: 创建 node-problem-detector.yaml文件
  template: src=node-problem-detector.yaml dest={{ base_dir }}/manifests/node-problem-detector.yaml
  when: k8s_node_problem_detector_image is defined
  
- name: 部署 node-problem-detector
  shell: "{{bin_dir}}/kubectl apply -f {{ base_dir }}/manifests/node-problem-detector.yaml"
  when: k8s_node_problem_detector_image is defined
  
- name: 创建 metrics-server.yaml文件
  template: src=metrics-server.yaml dest={{ base_dir }}/manifests/metrics-server.yaml
  when: k8s_metrics_server_image is defined
  
- name: 部署 metrics-server
  shell: "{{bin_dir}}/kubectl apply -f {{ base_dir }}/manifests/metrics-server.yaml"
  when: k8s_metrics_server_image is defined
  
- name: 创建 kubernetes-dashboard yaml文件
  template: src=kubernetes-dashboard.yaml dest={{ base_dir }}/manifests/kubernetes-dashboard.yaml
  
- name: 部署 kubernetes-dashboard
  shell: "{{bin_dir}}/kubectl apply -f {{ base_dir }}/manifests/kubernetes-dashboard.yaml"
  
- name: 创建 traefik-ingress yaml文件
  template: src=traefik-ingress.yaml dest={{ base_dir }}/manifests/traefik-ingress.yaml
  
- name: 部署 traefik-ingress
  shell: "{{bin_dir}}/kubectl apply -f {{ base_dir }}/manifests/traefik-ingress.yaml"
  
- name: 创建 local-storage.yaml文件
  template: src=local-storage.yaml dest={{ base_dir }}/manifests/local-storage.yaml
  
- name: 部署 local-storage.yaml
  shell: "{{bin_dir}}/kubectl apply -f {{ base_dir }}/manifests/local-storage.yaml"
  
- name: 创建 openvpn.yaml文件
  template: src=openvpn.yaml dest={{ base_dir }}/manifests/openvpn.yaml
  
- name: 部署 openvpn.yaml
  shell: "{{bin_dir}}/kubectl apply -f {{ base_dir }}/manifests/openvpn.yaml"
  
- name: 创建 kube-state-metrics.yaml文件
  template: src=kube-state-metrics.yaml dest={{ base_dir }}/manifests/kube-state-metrics.yaml
  
- name: 部署 kube-state-metrics.yaml
  shell: "{{bin_dir}}/kubectl apply -f {{ base_dir }}/manifests/kube-state-metrics.yaml"
  
- name: 导入gfs tasks
  include_tasks : glusterfs.yml
  when: deploy_gfs
  
#- name: 修改influxdb 中的数据保存策略（90天）
#  shell: "curl 'http://{{MASTER_IP}}:6063/query?db=k8s&q=ALTER%20RETENTION%20POLICY%20default%20ON%20%22k8s%22DURATION%2090d&epoch=ms'"
#  register: influxdb_result
#  until: '"ON k8s DURATION 90d" in influxdb_result.stdout'
#  retries: 50
#  delay: 10
#  when: not ansible_check_mode
